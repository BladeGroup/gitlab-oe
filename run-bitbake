#!/bin/sh
set -e

die() {
    echo >&2 "ERROR: $*"
    exit 1
}

B=""
while [ $# -gt 1 ]; do
    case "$1" in
        --dir)
            B="$2"
            shift
            ;;
        --)
            shift
            break
            ;;
        -*)
            die "unknown flag '$1'"
            ;;
        *)
            break
            ;;
    esac
    shift
done

[ -d "$B" ] || die "directory '$B' does not exist"

set +e
# now get the job's exit code and make sure we exit with it
./ci/run --dir "$B" bitbake "$@"
BB_RET=$?

# BEGIN poor man's after_script, can't use that gitlab-ci feature as
# it is already filled by oe_deploy

mkdir -p artifacts
find build \
     -path 'build/tmp/work/*/*/*/temp/log.*.*' \
     -not -name '*_setscene.*' \
     -not -name '*.do_rm_work*' |
    sed s,^build/tmp/work/,, |
    while IFS=/ read arch pkg v _temp file; do
        mkdir -p artifacts/$arch/${pkg}_$v
        ln build/tmp/work/$arch/$pkg/$v/temp/$file artifacts/$arch/${pkg}_$v/$file
    done

# cooker logs, more easily accessible than in the job jog
mkdir -p artifacts/cooker
cp $(find build/tmp/log/cooker -type f) artifacts/cooker

# publish build history
git -C "$B/buildhistory" push origin HEAD

# END poor man's after_script

exit $BB_RET
