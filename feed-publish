#!/bin/sh
set -e

: ${RSYNC:=rsync -a --info=stats2}
: ${RSYNCDELETE:=--delete-after}

die() {
    echo >&2 "ERROR: $*"
    exit 1
}

B=""
ARCH=""
DST=""
PORT=""
FEED=""
PKGTYPE="ipk"
while [ $# -gt 1 ]; do
    case "$1" in
        --dir)
            B="$2"
            shift
            ;;
        --arch)
            ARCH="$2"
            shift
            ;;
        --rsync-to)
            DST="$2"
            shift
            ;;
        --ssh-port)
            PORT="$2"
            shift
            ;;
        --feed)
            FEED="$2"
            shift
            ;;
        --pkg-type)
            PKGTYPE="$2"
            shift
            ;;
        --)
            shift
            break
            ;;
        -*)
            die "unknown flag '$1'"
            ;;
        *)
            break
            ;;
    esac
    shift
done

[ -d "$B" ] || die "directory '$B' does not exist"
[ -n "$ARCH" ] || die "missing --arch"
[ -n "$DST" ] || die "missing --rsync-to"
[ -n "$FEED" ] || die "missing --feed"

# gitlab does not allow to set empty variables
PORT=$(echo $PORT)

if [ -n "$PORT" ]; then
    export RSYNC_RSH="ssh -p '$PORT'"
fi

# some rsync implementations (gsutil) do not support --delete-after so
# we have to get back to 19th-century techniques: work in 2 passes

if [ "$RSYNCDELETE" != "--delete-after" ]; then
    $RSYNC \
        "${B}/tmp/deploy/${PKGTYPE}/" "${DST}/${ARCH}/${FEED}"
fi

$RSYNC \
    ${RSYNCDELETE} \
    "${B}/tmp/deploy/${PKGTYPE}/" "${DST}/${ARCH}/${FEED}"
