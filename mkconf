#!/bin/bash
set -e

die() {
    echo >&2 "ERROR: $*"
    exit 1
}

B=""
TEMPLATECONF=""
GEN=""
DL_DIR=""
HISTREPO=""
HISTREF=""
PRSERV=""
BASEGEN_ALLOWED_BRANCHES=""
OEENV="poky/oe-init-build-env"
while [ $# -gt 1 ]; do
    case "$1" in
        --dir)
            B="$2"
            shift
            ;;
        --template-conf)
            TEMPLATECONF="$2"
            shift
            ;;
        --sstate-gen)
            GEN="$2"
            shift
            ;;
        --download-dir)
            DL_DIR="$2"
            shift
            ;;
        --buildhistory-repo)
            HISTREPO="$2"
            shift
            ;;
        --buildhistory-ref)
            HISTREF="$2"
            shift
            ;;
        --prserv)
            PRSERV="$2"
            shift
            ;;
        --basegen-allowed-branches)
            BASEGEN_ALLOWED_BRANCHES="${2}"
            shift
            ;;
        --oe-env)
            OEENV="${2}"
            shift
            ;;
        --)
            shift
            break
            ;;
        -*)
            die "unknown flag '$1'"
            ;;
        *)
            break
            ;;
    esac
    shift
done

[ -n "$B" ] || die "missing --dir"
[ -n "$TEMPLATECONF" ] || die "missing --template-conf"
[ -n "$GEN" ] || die "missing --sstate-gen"
[ -n "$DL_DIR" ] || die "missing --download-dir"
[ -r "$OEENV" ] || die "cannot read '$OEENV', adjust with --oe-env"

if [ -n "$HISTREPO" -a -z "$HISTREF" ]; then
    die "--buildhistory-repo requries --buildhistory-ref"
fi
if [ -n "$HISTREF" -a -z "$HISTREPO" ]; then
    die "--buildhistory-ref requries --buildhistory-repo"
fi

SSTATE="${HOME}/sstate-cache-$GEN"
SSTATE_MIRRORS=""

case "$GEN" in
    *+*)
        BASEGEN=$GEN
        while true; do
            case "$BASEGEN" in
                *+*)
                    BASEGEN=${BASEGEN%+*}
                    SSTATE_MIRRORS="$SSTATE_MIRRORS ${HOME}/sstate-cache-$BASEGEN"
                    ;;
                *)
                    break
                    ;;
            esac
        done
        ;;
    *)
        if [ -n "$BASEGEN_ALLOWED_BRANCHES" ]; then
            echo $BASEGEN_ALLOWED_BRANCHES | tr ' ' '\n' | grep -qxF "$CI_COMMIT_REF_NAME" ||
                die "branch '$CI_COMMIT_REF_NAME' is NOT allowed to contribute to base sstate cache"
            echo "NOTE: branch '$CI_COMMIT_REF_NAME' allowed to contribute to base sstate cache"
        fi
        ;;
esac

if [ -r "$B"/conf/local.conf ]; then
    . "$OEENV" "$B"

else
    TEMPLATECONF="$TEMPLATECONF" . "$OEENV" "$B"
    echo "$OEENV" > conf/oe-env

    # make sure the branch is current so shadow-image identifies
    # BRANCHNAME (unless CI_COMMIT_REF_NAME does not match the sha -
    # maybe for rebuilds of older versions ?  Or should we just "git
    # branch -f" all the time ?)
    UPSTREAMSHA=$(git rev-parse "origin/${CI_COMMIT_REF_NAME}")
    if [ "$UPSTREAMSHA" = "${CI_COMMIT_SHA}" ]; then
        git branch -f "${CI_COMMIT_REF_NAME}" "origin/${CI_COMMIT_REF_NAME}"
        git checkout "${CI_COMMIT_REF_NAME}"
        # assert we did not change sha1
        test $(git rev-parse HEAD) = ${CI_COMMIT_SHA}
    fi

    if [ -n "$HISTREPO" ]; then
        git clone "$HISTREPO" buildhistory
        git -C buildhistory checkout "$HISTREF"
        cat >> "conf/local.conf" <<EOF

INHERIT += "buildhistory"
BUILDHISTORY_COMMIT = "1"
BUILDHISTORY_FEATURES = "image"
EOF
    fi

    # adjust conf
    cat >> "conf/local.conf" <<EOF

DL_DIR = "${DL_DIR}"
SSTATE_DIR = "${SSTATE}"
RM_WORK_EXCLUDE = ""

INHERIT += "buildstats"
INHERIT += "buildstats-summary"
EOF

    if [ -n "$SSTATE_MIRRORS" ]; then
        echo 'SSTATE_MIRRORS ?= "\' >> "conf/local.conf"
        for m in $SSTATE_MIRRORS; do
            echo "file://.* file://$m/PATH \\n \\" >> "conf/local.conf"
        done
        echo '"' >> "conf/local.conf"
    fi

    if [ -n "$PRSERV" ]; then
        sed -i 's/^PRSERV_HOST = .*/PRSERV_HOST = "'"$PRSERV"'"/' "conf/local.conf"
    fi
fi
